{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhavani\\\\OneDrive\\\\Desktop\\\\Mern-stack machin test\\\\frontend\\\\src\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './styles.css'; \n\n// const LoginForm = () => {\n//   const [isLoginActive, setIsLoginActive] = useState(true);\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSignupClick = () => {\n//     setIsLoginActive(false);\n//   };\n\n//   const handleLoginClick = () => {\n//     setIsLoginActive(true);\n//   };\n\n//   const handleSignupLinkClick = () => {\n//     setIsLoginActive(false); // Switch to signup form\n//   };\n\n//   const handleLoginSubmit = (e) => {\n//     e.preventDefault();\n\n//     // Mock login validation\n//     if (email === \"user@example.com\" && password === \"password123\") {\n//       // Show success popup\n//       alert(\"Login successful!\");\n\n//       // Redirect to another page (e.g., Dashboard)\n//       navigate('/Dashboard'); // Make sure to set this route in your App.js\n//     } else {\n//       alert(\"Invalid email or password.\");\n//     }\n//   };\n\n//   const handleSignupSubmit = (e) => {\n//     e.preventDefault();\n//     // Handle signup logic here\n//     alert(\"Signup functionality not implemented yet.\");\n//   };\n\n//   return (\n//     <div className=\"wrapper\">\n//       <div className=\"title-text\">\n//         <div className={`title login ${isLoginActive ? \"active\" : \"\"}`}>Login Form</div>\n//         <div className={`title signup ${!isLoginActive ? \"active\" : \"\"}`}>Signup Form</div>\n//       </div>\n//       <div className=\"form-container\">\n//         <div className=\"slide-controls\">\n//           <input type=\"radio\" name=\"slide\" id=\"login\" checked={isLoginActive} readOnly />\n//           <input type=\"radio\" name=\"slide\" id=\"signup\" checked={!isLoginActive} readOnly />\n//           <label htmlFor=\"login\" className=\"slide login\" onClick={handleLoginClick}>Login</label>\n//           <label htmlFor=\"signup\" className=\"slide signup\" onClick={handleSignupClick}>Signup</label>\n//           <div className={`slider-tab ${isLoginActive ? \"login\" : \"signup\"}`}></div>\n//         </div>\n//         <div className=\"form-inner\">\n//           {isLoginActive ? (\n//             <form className=\"login\" onSubmit={handleLoginSubmit}>\n//               <div className=\"field\">\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Email Address\"\n//                   required\n//                   value={email}\n//                   onChange={(e) => setEmail(e.target.value)}\n//                 />\n//               </div>\n//               <div className=\"field\">\n//                 <input\n//                   type=\"password\"\n//                   placeholder=\"Password\"\n//                   required\n//                   value={password}\n//                   onChange={(e) => setPassword(e.target.value)}\n//                 />\n//               </div>\n//               <div className=\"pass-link\"><a href=\"#\">Forgot password?</a></div>\n//               <div className=\"field btn\">\n//                 <div className=\"btn-layer\"></div>\n//                 <input type=\"submit\" value=\"Login\" />\n//               </div>\n//               <div className=\"signup-link\">\n//                 Not a member? <a href=\"#\" onClick={handleSignupLinkClick}>Signup now</a>\n//               </div>\n//             </form>\n//           ) : (\n//             <form className=\"signup\" onSubmit={handleSignupSubmit}>\n//               <div className=\"field\">\n//                 <input type=\"text\" placeholder=\"Email Address\" required />\n//               </div>\n//               <div className=\"field\">\n//                 <input type=\"password\" placeholder=\"Password\" required />\n//               </div>\n//               <div className=\"field\">\n//                 <input type=\"password\" placeholder=\"Confirm password\" required />\n//               </div>\n//               <div className=\"field btn\">\n//                 <div className=\"btn-layer\"></div>\n//                 <input type=\"submit\" value=\"Signup\" />\n//               </div>\n//             </form>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [isLoginActive, setIsLoginActive] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [signupEmail, setSignupEmail] = useState('');\n  const [signupPassword, setSignupPassword] = useState('');\n  const [signupConfirmPassword, setSignupConfirmPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSignupClick = () => {\n    setIsLoginActive(false);\n  };\n  const handleLoginClick = () => {\n    setIsLoginActive(true);\n  };\n  const handleSignupLinkClick = () => {\n    setIsLoginActive(false); // Switch to signup form\n  };\n  const handleLoginSubmit = e => {\n    e.preventDefault();\n\n    // Logic to handle login (this is where you integrate API calls)\n    console.log('Logging in with:', email, password);\n\n    // You can use an authentication API or backend service here.\n    // Example: callLoginAPI(email, password) and then redirect.\n\n    // After successful login, navigate to another page\n    navigate('/Dashboard'); // Redirect to Dashboard or desired page\n  };\n  const handleSignupSubmit = e => {\n    e.preventDefault();\n\n    // Basic validation for signup form\n    if (signupPassword !== signupConfirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n\n    // Handle signup logic (this is where you integrate API calls)\n    console.log('Signing up with:', signupEmail, signupPassword);\n\n    // After successful signup, clear form and switch to login form\n    setSignupEmail('');\n    setSignupPassword('');\n    setSignupConfirmPassword('');\n    setIsLoginActive(true); // Switch back to the login form\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `title login ${isLoginActive ? \"active\" : \"\"}`,\n        children: \"Login Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `title signup ${!isLoginActive ? \"active\" : \"\"}`,\n        children: \"Signup Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"slide\",\n          id: \"login\",\n          checked: isLoginActive,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"slide\",\n          id: \"signup\",\n          checked: !isLoginActive,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login\",\n          className: \"slide login\",\n          onClick: handleLoginClick,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"signup\",\n          className: \"slide signup\",\n          onClick: handleSignupClick,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `slider-tab ${isLoginActive ? \"login\" : \"signup\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inner\",\n        children: isLoginActive ? /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"login\",\n          onSubmit: handleLoginSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email Address\",\n              required: true,\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              required: true,\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pass-link\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-layer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup-link\",\n            children: [\"Not a member? \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              onClick: handleSignupLinkClick,\n              children: \"Signup now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"signup\",\n          onSubmit: handleSignupSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email Address\",\n              required: true,\n              value: signupEmail,\n              onChange: e => setSignupEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              required: true,\n              value: signupPassword,\n              onChange: e => setSignupPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Confirm password\",\n              required: true,\n              value: signupConfirmPassword,\n              onChange: e => setSignupConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-layer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"PwK9Rd/TbH0g+K2Voy9ViPjRmdQ=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginForm","_s","isLoginActive","setIsLoginActive","email","setEmail","password","setPassword","signupEmail","setSignupEmail","signupPassword","setSignupPassword","signupConfirmPassword","setSignupConfirmPassword","navigate","handleSignupClick","handleLoginClick","handleSignupLinkClick","handleLoginSubmit","e","preventDefault","console","log","handleSignupSubmit","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","id","checked","readOnly","htmlFor","onClick","onSubmit","placeholder","required","value","onChange","target","href","_c","$RefreshReg$"],"sources":["C:/Users/Bhavani/OneDrive/Desktop/Mern-stack machin test/frontend/src/LoginForm.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './styles.css'; \n\n// const LoginForm = () => {\n//   const [isLoginActive, setIsLoginActive] = useState(true);\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSignupClick = () => {\n//     setIsLoginActive(false);\n//   };\n\n//   const handleLoginClick = () => {\n//     setIsLoginActive(true);\n//   };\n\n//   const handleSignupLinkClick = () => {\n//     setIsLoginActive(false); // Switch to signup form\n//   };\n\n//   const handleLoginSubmit = (e) => {\n//     e.preventDefault();\n    \n//     // Mock login validation\n//     if (email === \"user@example.com\" && password === \"password123\") {\n//       // Show success popup\n//       alert(\"Login successful!\");\n\n//       // Redirect to another page (e.g., Dashboard)\n//       navigate('/Dashboard'); // Make sure to set this route in your App.js\n//     } else {\n//       alert(\"Invalid email or password.\");\n//     }\n//   };\n\n//   const handleSignupSubmit = (e) => {\n//     e.preventDefault();\n//     // Handle signup logic here\n//     alert(\"Signup functionality not implemented yet.\");\n//   };\n\n//   return (\n//     <div className=\"wrapper\">\n//       <div className=\"title-text\">\n//         <div className={`title login ${isLoginActive ? \"active\" : \"\"}`}>Login Form</div>\n//         <div className={`title signup ${!isLoginActive ? \"active\" : \"\"}`}>Signup Form</div>\n//       </div>\n//       <div className=\"form-container\">\n//         <div className=\"slide-controls\">\n//           <input type=\"radio\" name=\"slide\" id=\"login\" checked={isLoginActive} readOnly />\n//           <input type=\"radio\" name=\"slide\" id=\"signup\" checked={!isLoginActive} readOnly />\n//           <label htmlFor=\"login\" className=\"slide login\" onClick={handleLoginClick}>Login</label>\n//           <label htmlFor=\"signup\" className=\"slide signup\" onClick={handleSignupClick}>Signup</label>\n//           <div className={`slider-tab ${isLoginActive ? \"login\" : \"signup\"}`}></div>\n//         </div>\n//         <div className=\"form-inner\">\n//           {isLoginActive ? (\n//             <form className=\"login\" onSubmit={handleLoginSubmit}>\n//               <div className=\"field\">\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Email Address\"\n//                   required\n//                   value={email}\n//                   onChange={(e) => setEmail(e.target.value)}\n//                 />\n//               </div>\n//               <div className=\"field\">\n//                 <input\n//                   type=\"password\"\n//                   placeholder=\"Password\"\n//                   required\n//                   value={password}\n//                   onChange={(e) => setPassword(e.target.value)}\n//                 />\n//               </div>\n//               <div className=\"pass-link\"><a href=\"#\">Forgot password?</a></div>\n//               <div className=\"field btn\">\n//                 <div className=\"btn-layer\"></div>\n//                 <input type=\"submit\" value=\"Login\" />\n//               </div>\n//               <div className=\"signup-link\">\n//                 Not a member? <a href=\"#\" onClick={handleSignupLinkClick}>Signup now</a>\n//               </div>\n//             </form>\n//           ) : (\n//             <form className=\"signup\" onSubmit={handleSignupSubmit}>\n//               <div className=\"field\">\n//                 <input type=\"text\" placeholder=\"Email Address\" required />\n//               </div>\n//               <div className=\"field\">\n//                 <input type=\"password\" placeholder=\"Password\" required />\n//               </div>\n//               <div className=\"field\">\n//                 <input type=\"password\" placeholder=\"Confirm password\" required />\n//               </div>\n//               <div className=\"field btn\">\n//                 <div className=\"btn-layer\"></div>\n//                 <input type=\"submit\" value=\"Signup\" />\n//               </div>\n//             </form>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\n\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css'; \n\nconst LoginForm = () => {\n  const [isLoginActive, setIsLoginActive] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [signupEmail, setSignupEmail] = useState('');\n  const [signupPassword, setSignupPassword] = useState('');\n  const [signupConfirmPassword, setSignupConfirmPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleSignupClick = () => {\n    setIsLoginActive(false);\n  };\n\n  const handleLoginClick = () => {\n    setIsLoginActive(true);\n  };\n\n  const handleSignupLinkClick = () => {\n    setIsLoginActive(false); // Switch to signup form\n  };\n\n  const handleLoginSubmit = (e) => {\n    e.preventDefault();\n    \n    // Logic to handle login (this is where you integrate API calls)\n    console.log('Logging in with:', email, password);\n\n    // You can use an authentication API or backend service here.\n    // Example: callLoginAPI(email, password) and then redirect.\n\n    // After successful login, navigate to another page\n    navigate('/Dashboard');  // Redirect to Dashboard or desired page\n  };\n\n  const handleSignupSubmit = (e) => {\n    e.preventDefault();\n\n    // Basic validation for signup form\n    if (signupPassword !== signupConfirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n\n    // Handle signup logic (this is where you integrate API calls)\n    console.log('Signing up with:', signupEmail, signupPassword);\n\n    // After successful signup, clear form and switch to login form\n    setSignupEmail('');\n    setSignupPassword('');\n    setSignupConfirmPassword('');\n    setIsLoginActive(true);  // Switch back to the login form\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"title-text\">\n        <div className={`title login ${isLoginActive ? \"active\" : \"\"}`}>Login Form</div>\n        <div className={`title signup ${!isLoginActive ? \"active\" : \"\"}`}>Signup Form</div>\n      </div>\n      <div className=\"form-container\">\n        <div className=\"slide-controls\">\n          <input type=\"radio\" name=\"slide\" id=\"login\" checked={isLoginActive} readOnly />\n          <input type=\"radio\" name=\"slide\" id=\"signup\" checked={!isLoginActive} readOnly />\n          <label htmlFor=\"login\" className=\"slide login\" onClick={handleLoginClick}>Login</label>\n          <label htmlFor=\"signup\" className=\"slide signup\" onClick={handleSignupClick}>Signup</label>\n          <div className={`slider-tab ${isLoginActive ? \"login\" : \"signup\"}`}></div>\n        </div>\n        <div className=\"form-inner\">\n          {isLoginActive ? (\n            <form className=\"login\" onSubmit={handleLoginSubmit}>\n              <div className=\"field\">\n                <input\n                  type=\"email\"\n                  placeholder=\"Email Address\"\n                  required\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div className=\"field\">\n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  required\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </div>\n              <div className=\"pass-link\"><a href=\"#\">Forgot password?</a></div>\n              <div className=\"field btn\">\n                <div className=\"btn-layer\"></div>\n                <input type=\"submit\" value=\"Login\" />\n              </div>\n              <div className=\"signup-link\">\n                Not a member? <a href=\"#\" onClick={handleSignupLinkClick}>Signup now</a>\n              </div>\n            </form>\n          ) : (\n            <form className=\"signup\" onSubmit={handleSignupSubmit}>\n              <div className=\"field\">\n                <input\n                  type=\"email\"\n                  placeholder=\"Email Address\"\n                  required\n                  value={signupEmail}\n                  onChange={(e) => setSignupEmail(e.target.value)}\n                />\n              </div>\n              <div className=\"field\">\n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  required\n                  value={signupPassword}\n                  onChange={(e) => setSignupPassword(e.target.value)}\n                />\n              </div>\n              <div className=\"field\">\n                <input\n                  type=\"password\"\n                  placeholder=\"Confirm password\"\n                  required\n                  value={signupConfirmPassword}\n                  onChange={(e) => setSignupConfirmPassword(e.target.value)}\n                />\n              </div>\n              <div className=\"field btn\">\n                <div className=\"btn-layer\"></div>\n                <input type=\"submit\" value=\"Signup\" />\n              </div>\n            </form>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}