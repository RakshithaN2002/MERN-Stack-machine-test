{"ast":null,"code":"import { ADD_EMPLOYEE, UPDATE_EMPLOYEE, DELETE_EMPLOYEE } from './employeeTypes';\nimport { employeesData } from '../../data';\nconst initialState = {\n  employees: employeesData,\n  error: null\n};\nexport const employeeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_EMPLOYEE:\n      return {\n        ...state,\n        employees: [...state.employees, action.employee]\n      };\n    case UPDATE_EMPLOYEE:\n      return {\n        ...state,\n        employees: state.employees.map(employee => {\n          if (employee.id === action.id) {\n            return {\n              ...employee,\n              ...action.employee\n            };\n          }\n          return employee;\n        })\n      };\n    case DELETE_EMPLOYEE:\n      return {\n        ...state,\n        employees: state.employees.filter(employee => employee.id !== action.id)\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ADD_EMPLOYEE","UPDATE_EMPLOYEE","DELETE_EMPLOYEE","employeesData","initialState","employees","error","employeeReducer","state","action","type","employee","map","id","filter"],"sources":["C:/Users/Bhavani/OneDrive/Desktop/Mern-stack machin test/frontend/src/redux/employee/employeeReducer.js"],"sourcesContent":["import { ADD_EMPLOYEE, UPDATE_EMPLOYEE, DELETE_EMPLOYEE } from './employeeTypes';\nimport { employeesData } from '../../data'\n\nconst initialState = {\n    employees: employeesData,\n    error: null\n}\n\nexport const employeeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_EMPLOYEE:\n            return {\n                ...state,\n                employees: [...state.employees, action.employee]\n            };\n        case UPDATE_EMPLOYEE:\n            return {\n                ...state,\n                employees: state.employees.map(employee => {\n                    if (employee.id === action.id) {\n                        return { ...employee, ...action.employee }\n                    }\n                    return employee;\n                })\n            };\n        case DELETE_EMPLOYEE:\n            return {\n                ...state,\n                employees: state.employees.filter(employee => employee.id !== action.id)\n            };\n        default:\n            return state;\n    }\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,eAAe,EAAEC,eAAe,QAAQ,iBAAiB;AAChF,SAASC,aAAa,QAAQ,YAAY;AAE1C,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAEF,aAAa;EACxBG,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EAC7D,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKV,YAAY;MACb,OAAO;QACH,GAAGQ,KAAK;QACRH,SAAS,EAAE,CAAC,GAAGG,KAAK,CAACH,SAAS,EAAEI,MAAM,CAACE,QAAQ;MACnD,CAAC;IACL,KAAKV,eAAe;MAChB,OAAO;QACH,GAAGO,KAAK;QACRH,SAAS,EAAEG,KAAK,CAACH,SAAS,CAACO,GAAG,CAACD,QAAQ,IAAI;UACvC,IAAIA,QAAQ,CAACE,EAAE,KAAKJ,MAAM,CAACI,EAAE,EAAE;YAC3B,OAAO;cAAE,GAAGF,QAAQ;cAAE,GAAGF,MAAM,CAACE;YAAS,CAAC;UAC9C;UACA,OAAOA,QAAQ;QACnB,CAAC;MACL,CAAC;IACL,KAAKT,eAAe;MAChB,OAAO;QACH,GAAGM,KAAK;QACRH,SAAS,EAAEG,KAAK,CAACH,SAAS,CAACS,MAAM,CAACH,QAAQ,IAAIA,QAAQ,CAACE,EAAE,KAAKJ,MAAM,CAACI,EAAE;MAC3E,CAAC;IACL;MACI,OAAOL,KAAK;EACpB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}